{"version":3,"file":"static/js/122.9b01c105.chunk.js","mappings":"2NAGQA,EAAcC,EAAQ,IAAtBD,UAoCR,EAlCgB,WACd,IAAQE,EAAYF,IAAZE,QACR,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GACVM,MAAK,SAAAC,GACJJ,EAAWI,EACZ,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,+FAAqBA,EAAME,QAC1C,GACJ,GAAE,CAACX,KAGF,8BACE,wBACGE,EAAQU,OACPV,EAAQW,KAAI,SAAAC,GACV,OACE,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAGhB,KAED,2CAKT,C,+LCnCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cACE,+NAIAC,EAAmB,mCAAG,6GAEDN,EAAAA,EAAAA,IACrB,kCACAC,GAJsB,cAElBM,EAFkB,yBAMjBA,EAASC,KAAKC,SANG,gCAQxBhB,QAAQiB,IAAR,MARwB,yDAAH,qDAYnBC,EAAiB,mCAAG,WAAM5B,GAAN,gGAECiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,mBAErBkB,GAJoB,cAEhBM,EAFgB,yBAMfA,EAASC,MANM,gCAQtBf,QAAQiB,IAAR,MARsB,yDAAH,sDAYjBE,EAAoB,mCAAG,WAAMC,GAAN,gGAEFb,EAAAA,EAAAA,IAAA,6BAAgCa,GAASZ,GAFvC,cAEnBM,EAFmB,yBAIlBA,EAASC,KAAKC,SAJI,gCAMzBhB,QAAQiB,IAAR,MANyB,yDAAH,sDAUpBI,EAAY,mCAAG,WAAM/B,GAAN,gGAEMiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,YAAsCkB,GAF5C,cAEXM,EAFW,yBAGVA,EAASC,KAAKO,MAHJ,gCAKjBtB,QAAQD,MAAR,MALiB,yDAAH,sDAQZJ,EAAY,mCAAG,WAAML,GAAN,gGAEMiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,YAAsCkB,GAF5C,cAEXM,EAFW,yBAGVA,EAASC,KAAKC,SAHJ,gCAKjBhB,QAAQD,MAAR,MALiB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","helpers/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchReviews } from 'helpers/api';\n\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(result => {\n        setReviews(result);\n      })\n      .catch(error => {\n        console.error('Произошла ошибка:', error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {reviews.length ? (\n          reviews.map(review => {\n            return (\n              <li>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>not reviews </p>\n        )}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMzkzMGZmOGVjN2Y3MDIzMzQ2OTRhMjgyMWM2M2Q4MyIsInN1YiI6IjY0YzQyNzJiZWMwYzU4MDBlODBiMjI4NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gnPmaXvRcXQrh2jdHCD7pTM-2igyCL7PyWdhAbgcU5A',\n  },\n};\n\nconst fetchFavoriteMovies = async () => {\n  try {\n    const response = await axios.get(\n      'trending/all/day?language=en-US',\n      options\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?language=en-US`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchSearchForMovies = async query => {\n  try {\n    const response = await axios.get(`search/movie?query=${query}`, options);\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCredits = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, options);\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport {\n  fetchFavoriteMovies,\n  fetchMovieDetails,\n  fetchSearchForMovies,\n  fetchCredits,\n  fetchReviews,\n};\n"],"names":["useParams","require","movieId","useState","reviews","setReviews","useEffect","fetchReviews","then","result","catch","error","console","message","length","map","review","author","content","axios","options","method","headers","accept","Authorization","fetchFavoriteMovies","response","data","results","log","fetchMovieDetails","fetchSearchForMovies","query","fetchCredits","cast"],"sourceRoot":""}