{"version":3,"file":"static/js/877.02ba4b88.chunk.js","mappings":"2NAGQA,EAAcC,EAAQ,IAAtBD,UAwCR,EAtCa,WACX,IAAQE,EAAYF,IAAZE,QACR,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAbAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GACVQ,MAAK,SAAAC,GACJL,QAAQC,IAAII,GACZN,EAAQM,EACT,IACAC,OAAM,SAAAC,GACLP,QAAQO,MAAM,+FAAqBA,EAAMC,QAC1C,GACJ,GAAE,CAACZ,KAGF,8BACE,wBACGE,EAAKW,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IACED,EAAIE,cAAJ,yCACkCF,EAAIE,cAExCC,IAAI,gBAEN,uBAAIH,EAAII,QACR,uCAAeJ,EAAIK,eATZL,EAAIM,GAYhB,OAIR,C,+LCxCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cACE,+NAIAC,EAAmB,mCAAG,6GAEDN,EAAAA,EAAAA,IACrB,kCACAC,GAJsB,cAElBM,EAFkB,yBAMjBA,EAASC,KAAKC,SANG,gCAQxB1B,QAAQC,IAAR,MARwB,yDAAH,qDAYnB0B,EAAiB,mCAAG,WAAM/B,GAAN,gGAECqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,mBAErBsB,GAJoB,cAEhBM,EAFgB,yBAMfA,EAASC,MANM,gCAQtBzB,QAAQC,IAAR,MARsB,yDAAH,sDAYjB2B,EAAoB,mCAAG,WAAMC,GAAN,gGAEFZ,EAAAA,EAAAA,IAAA,6BAAgCY,GAASX,GAFvC,cAEnBM,EAFmB,yBAIlBA,EAASC,KAAKC,SAJI,gCAMzB1B,QAAQC,IAAR,MANyB,yDAAH,sDAUpBE,EAAY,mCAAG,WAAMP,GAAN,gGAEMqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,YAAsCsB,GAF5C,cAEXM,EAFW,yBAGVA,EAASC,KAAK3B,MAHJ,gCAKjBE,QAAQO,MAAR,MALiB,yDAAH,sDAQZuB,EAAY,mCAAG,WAAMlC,GAAN,gGAEMqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,YAAsCsB,GAF5C,cAEXM,EAFW,yBAGVA,EAASC,KAAKC,SAHJ,gCAKjB1B,QAAQO,MAAR,MALiB,yDAAH,qD","sources":["components/Cast/Cast.jsx","helpers/api.js"],"sourcesContent":["import { fetchCredits } from 'helpers/api';\nimport { useEffect, useState } from 'react';\n\nconst { useParams } = require('react-router-dom');\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  console.log(cast);\n\n  useEffect(() => {\n    fetchCredits(movieId)\n      .then(result => {\n        console.log(result);\n        setCast(result);\n      })\n      .catch(error => {\n        console.error('Произошла ошибка:', error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {cast.map(cas => {\n          return (\n            <li key={cas.id}>\n              <img\n                src={\n                  cas.profile_path &&\n                  `https://image.tmdb.org/t/p/w200${cas.profile_path}`\n                }\n                alt=\"{cas.name}\"\n              />\n              <p>{cas.name}</p>\n              <p>Character: {cas.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMzkzMGZmOGVjN2Y3MDIzMzQ2OTRhMjgyMWM2M2Q4MyIsInN1YiI6IjY0YzQyNzJiZWMwYzU4MDBlODBiMjI4NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gnPmaXvRcXQrh2jdHCD7pTM-2igyCL7PyWdhAbgcU5A',\n  },\n};\n\nconst fetchFavoriteMovies = async () => {\n  try {\n    const response = await axios.get(\n      'trending/all/day?language=en-US',\n      options\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?language=en-US`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchSearchForMovies = async query => {\n  try {\n    const response = await axios.get(`search/movie?query=${query}`, options);\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCredits = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, options);\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport {\n  fetchFavoriteMovies,\n  fetchMovieDetails,\n  fetchSearchForMovies,\n  fetchCredits,\n  fetchReviews,\n};\n"],"names":["useParams","require","movieId","useState","cast","setCast","console","log","useEffect","fetchCredits","then","result","catch","error","message","map","cas","src","profile_path","alt","name","character","id","axios","options","method","headers","accept","Authorization","fetchFavoriteMovies","response","data","results","fetchMovieDetails","fetchSearchForMovies","query","fetchReviews"],"sourceRoot":""}